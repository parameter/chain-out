[
  {
    "id": "birdie_hunter",
    "name": "Birdie Hunter",
    "quote": "You're a true predator of the fairway, hunting down birdies with skill and precision.",
    "icon": "birdiehunter",
    "isUnique": false,
    "type": "allRounds",
    "tier": "bronze",
    "tierNames": [
      "Birdie Hunter",
      "Birdie Pioneer",
      "Birdie Master",
      "Birdie Legend",
      "Birdie Trailblazer",
      "Birdie Conqueror",
      "Birdie Champion",
      "Birdie Grandmaster"
    ],
    "tierThresholds": [5, 50, 100, 500, 1000, 2000, 5000, 10000],
    "tierPoints": [10, 25, 50, 100, 250, 500, 750, 1000],
    "tierDescriptionPrefix": "Make",
    "tierDescriptionSuffix": "birdies",
    "difficulty": [
      "easy",
      "easy",
      "easy",
      "medium",
      "medium",
      "hard",
      "hard",
      "extreme"
    ],
    "animation": "pulse",
    "condition": "function (results, layout) { // Return the *number* of birdies to support tier progression\n  const birdies = results.filter((r) => {\n    const hole = layout.holes.find((h) => h.number === r.holeNumber);\n    return hole && r.score === hole.par - 1;\n  }).length;\n  return birdies;\n}"
  },
  {
    "id": "bird_collector",
    "name": "Bird Collector",
    "quote": "Catch birdies in different habitats.",
    "icon": "bird-collector",
    "isUnique": false,
    "type": "allRounds",
    "tier": "silver",
    "tierNames": [
      "Novice Bird Collector",
      "Apprentice Bird Collector",
      "Adept Birdie Hunter",
      "Birdie Hunter Marksman",
      "Professional Birdie Hunter",
      "Elite Birdie Hunter",
      "Master Birdie Hunter",
      "Grandmaster Birdie Hunter"
    ],
    "tierThresholds": [3, 5, 10, 15, 25, 50, 75, 100],
    "tierPoints": [10, 25, 50, 100, 250, 500, 750, 1000],
    "tierDescriptionPrefix": "Score birdie on",
    "tierDescriptionSuffix": "different courses",
    "difficulty": [
      "easy",
      "easy",
      "easy",
      "medium",
      "medium",
      "hard",
      "hard",
      "extreme"
    ],
    "points": 500,
    "animation": "bounce",
    "condition": "function (results, layout) { // Example: unlock if player made a birdie on 3+ distinct courses\n  const distinctCourses = new Set(results.map((r) => r.courseId));\n  return distinctCourses.size >= 3;\n}"
  },
  {
    "id": "bullseye_hunter",
    "name": "Bullseye Hunter",
    "quote": "Land in the bullseye — your safe space.",
    "icon": "bullseye-hunter",
    "isUnique": false,
    "type": "allRounds",
    "tier": "bronze",
    "tierNames": [
      "Bullseye Hunter",
      "Bullseye Pioneer",
      "Bullseye Master",
      "Bullseye Legend",
      "Bullseye Trailblazer",
      "Bullseye Conqueror",
      "Bullseye Champion",
      "Bullseye Grandmaster"
    ],
    "tierThresholds": [5, 25, 50, 100, 250, 500, 1000, 2000],
    "tierPoints": [10, 25, 50, 100, 250, 500, 750, 1000],
    "tierDescriptionPrefix": "Hit the bullseye",
    "tierDescriptionSuffix": "times",
    "difficulty": [
      "easy",
      "easy",
      "medium",
      "medium",
      "hard",
      "hard",
      "extreme",
      "extreme"
    ],
    "animation": "rotate",
    "condition": "function (results) { return results.some((r) => r.hitBullseye === true); }"
  },
  {
    "id": "course_collector",
    "name": "Course Collector",
    "quote": "Your appetite for new courses is insatiable!",
    "icon": "course-collector",
    "isUnique": false,
    "type": "allRounds",
    "tierNames": [
      "Course Hunter",
      "Course Traveler",
      "Course Wanderer",
      "Course Sprinter",
      "Course Explorer",
      "Course Adventurer",
      "Course Vagabond",
      "Course Globetrotter"
    ],
    "tierThresholds": [1, 5, 10, 25, 50, 100, 200, 500],
    "tierPoints": [10, 25, 50, 250, 500, 1000, 2000, 5000],
    "tierDescriptionPrefix": "Score birdie on",
    "tierDescriptionSuffix": "different courses",
    "difficulty": [
      "easy",
      "easy",
      "easy",
      "medium",
      "medium",
      "hard",
      "hard",
      "extreme"
    ],
    "tier": "bronze",
    "animation": "glow",
    "condition": "function (results) { const uniqueCourses = new Set(results.map((r) => r.courseId)); return uniqueCourses.size; }"
  },
  {
    "id": "eagle_man",
    "name": "Eagle Man",
    "quote": "You just caught a really rare bird man, be proud of yourself!",
    "description": "Score your first eagle",
    "icon": "eagle-man",
    "isUnique": true,
    "type": "lastRound",
    "unlockCondition": 1,
    "tier": "diamond",
    "difficulty": "hard",
    "points": 500,
    "animation": "glow",
    "condition": "function (results, layout) { return results.some((r) => { const hole = layout.holes.find((h) => h.number === r.hole); return hole && r.score !== 1 && r.score === hole.par - 2; }); }"
  },
  {
    "id": "round_rollercoaster",
    "name": "Round Rollercoaster",
    "quote": "Strap in — it's gonna be a bumpy ride!",
    "description": "Go birdie to bogey at least twice in one round",
    "icon": "round-rollercoaster",
    "isUnique": true,
    "type": "lastRound",
    "tier": "emerald",
    "difficulty": "hard",
    "points": 250,
    "animation": "glow",
    "condition": "function (results) { let streak = 0; for (let i = 1; i < results.length; i++) { const prev = results[i - 1].score;\n const curr = results[i].score;\n if ((prev < 0 && curr > 0) || (prev > 0 && curr < 0)) { streak++; } } return streak >= 2; }"
  },
  {
    "id": "three_wishes",
    "name": "Three Wishes",
    "quote": "Unlock three secret achievements.",
    "description": "Unlock three secret achievements, and you can make a wish. Be careful what you wish for!",
    "icon": "three-wishes",
    "isUnique": true,
    "type": "lastRound",
    "isSecret": true,
    "tier": "ruby",
    "difficulty": "hard",
    "points": 500,
    "animation": "bounce",
    "condition": "function (results, layout) { // Example: triggered externally once player has 3 hidden conditions met\n  return results.filter((r) => r.isSecretAchieved).length >= 3;\n}"
  },
  {
    "id": "basket_marksman",
    "name": "Basket Marksman",
    "quote": "You just found the holy grale of disc golf, now that's something to tell the kids about.",
    "icon": "basket-marksman",
    "isUnique": false,
    "type": "allRounds",
    "tierNames": [
      "Ace Hunter",
      "Ace Pioneer",
      "Ace Master",
      "Ace Legend",
      "Ace Trailblazer",
      "Ace Conqueror",
      "Ace Champion",
      "Ace Grandmaster"
    ],
    "tierThresholds": [1, 5, 10, 25, 50, 75, 100, 200],
    "tierPoints": [25, 50, 100, 250, 500, 750, 1000, 1250],
    "difficulty": [
      "easy",
      "medium",
      "medium",
      "medium",
      "hard",
      "hard",
      "extreme",
      "extreme"
    ],
    "tier": "cosmic",
    "animation": "glow",
    "condition": "function (results) { return results.some((r) => r.score === 1 && r.isAce === true); }"
  },
  {
    "id": "comeback",
    "name": "Comeback",
    "quote": "What goes down must come up again. Your resilience is admirable!",
    "description": "Make 2 consecutive birdies after a double bogey.",
    "icon": "comeback",
    "isUnique": true,
    "type": "lastRound",
    "tier": "gold",
    "difficulty": "medium",
    "points": 150,
    "animation": "glow",
    "condition": "function (results, layout) { for (let i = 2; i < results.length; i++) { const hole1 = layout.holes.find((h) => h.number === results[i - 2].hole); const hole2 = layout.holes.find((h) => h.number === results[i - 1].hole); const hole3 = layout.holes.find((h) => h.number === results[i].hole); const dblBogey = hole1 && results[i - 2].score === hole1.par + 2; const birdie1 = hole2 && results[i - 1].score === hole2.par - 1; const birdie2 = hole3 && results[i].score === hole3.par - 1; if (dblBogey && birdie1 && birdie2) return true; } return false; }"
  },
  {
    "id": "ob_hunter",
    "name": "OB Hunter",
    "quote": "Landing OB is never fun, but someone's gotta do it. Here's a consollation prize!",
    "icon": "ob-hunter",
    "isUnique": false,
    "type": "allRounds",
    "tierNames": [
      "OB Hunter",
      "OB Pioneer",
      "OB Master",
      "OB Legend",
      "OB Trailblazer",
      "OB Conqueror",
      "OB Champion",
      "OB Grandmaster"
    ],
    "tierThresholds": [1, 5, 10, 25, 50, 100, 200, 500],
    "tierPoints": [10, 25, 50, 100, 250, 500, 750, 1000],
    "difficulty": [
      "easy",
      "easy",
      "easy",
      "easy",
      "easy",
      "medium",
      "hard",
      "extreme"
    ],
    "tier": "bronze",
    "animation": "pulse",
    "condition": "function (results) { const obHits = results.filter((r) => r.obCount).length; return obHits; }"
  }
]